' Gambas module file

Property BackgroundType As Boolean
Property Background As Integer
Property FullScreen As Boolean
Property GameId As String
Property Opacity As Integer
Property Players As Integer
Property PlayerNames As String[]
Property PlayerSelection As String[]
Property ReverseMouseScroll As Boolean
Property ShowIndicators As Boolean
Property ShowMaxCol As Boolean
Property ShowSymbols As Boolean
Property ShowTopCol As Boolean
Property {Variant} As Integer

Public Const DEFAULT_COLOR_SCORE_BG As Integer = &HFFFFFF
Public Const DEFAULT_COLOR_SCORE_FG As Integer = &H555555
Public Const DEFAULT_COLOR_SCORE_INACTIVE_BG As Integer = &HDDDDDD
Public Const DEFAULT_COLOR_SCORE_INACTIVE_FG As Integer = &H555555
Public Const DEFAULT_COLOR_HEADER_BG As Integer = &HFFC71F
Public Const DEFAULT_COLOR_HEADER_FG As Integer = &H000000
Public Const DEFAULT_COLOR_INDICATOR_HI_BG As Integer = &HAAFFAA
Public Const DEFAULT_COLOR_INDICATOR_HI_FG As Integer = &H000000
Public Const DEFAULT_COLOR_INDICATOR_LO_BG As Integer = &HFFAAAA
Public Const DEFAULT_COLOR_INDICATOR_LO_FG As Integer = &H000000
Public Const DEFAULT_COLOR_MASK As Integer = &HBBBBBB
Public Const DEFAULT_COLOR_NAME_BG As Integer = &H444444
Public Const DEFAULT_COLOR_NAME_FG As Integer = &HFFC71F
Public Const DEFAULT_COLOR_SUM_BG As Integer = &HFFFF00
Public Const DEFAULT_COLOR_SUM_FG As Integer = &H000000
Public Const DEFAULT_OPACITY As Integer = 208

Public Const DEFAULT_FONT_SCORE As String = ""
Public Const DEFAULT_FONT_SCORE_INACTIVE As String = ""
Public Const DEFAULT_FONT_HEADER As String = ""
Public Const DEFAULT_FONT_INDICATOR_HI As String = ""
Public Const DEFAULT_FONT_INDICATOR_LO As String = ""
Public Const DEFAULT_FONT_MASK As String = ""
Public Const DEFAULT_FONT_NAME As String = "Italic"
Public Const DEFAULT_FONT_SUM As String = "Bold"

Public Const DEFAULT_WINDOW_BACKGROUND_TYPE As Boolean = True
Public Const DEFAULT_WINDOW_BACKGROUND As Integer = &HB9AA7E

Public StyleNames As String[] = [("Name row"), ("Header column"), ("Score"), ("Score, inactive"), ("Sum"), ("Indicator, good"), ("Indicator, bad")]

Public Enum Name, Header, Score, ScoreInactive, Sum, IndicatorHi, IndicatorLo, Mask

Private Const KEY_GAME_PLAYERS As String = "Game/Players"
Private Const KEY_REVERSE_MOUSE_SCROLL As String = "ReverseMouseScroll"
Private Const KEY_GAME_ID As String = "Game/Id"
Private Const KEY_GAME_VARIANT As String = "Game/Variant"
Private Const KEY_SCORECARD_OPACITY As String = "Scorecard/Opacity"
Private Const KEY_SCORECARD_SHOW_INDICATORS As String = "Scorecard/ShowIndicators"
Private Const KEY_SCORECARD_SHOW_MAXCOL As String = "Scorecard/ShowMax"
Private Const KEY_SCORECARD_SHOW_SYMBOLS As String = "Scorecard/ShowSymbols"
Private Const KEY_SCORECARD_SHOW_TOPCOL As String = "Scorecard/ShowTop"
Private Const KEY_PLAYER_NAMES As String = "Players"
Private Const KEY_PLAYER_SELECTION As String = "Game/PlayerSelection"
Private Const KEY_WINDOW_BACKGROUND As String = "Window/Background"
Private Const KEY_WINDOW_BACKGROUND_TYPE As String = "Window/BackgroundType"
Private Const KEY_WINDOW_FULL_SCREEN As String = "Window/FullScreen"
Private Const KEY_BACKGROUND As String = "Style/Background_"
Private Const KEY_FOREGROUND As String = "Style/Foreground_"
Private Const KEY_FONT As String = "Style/Font_"

Private $aBackgroundDefaults As Integer[] =
  [DEFAULT_COLOR_NAME_BG,
  DEFAULT_COLOR_HEADER_BG,
  DEFAULT_COLOR_SCORE_BG,
  DEFAULT_COLOR_SCORE_INACTIVE_BG,
  DEFAULT_COLOR_SUM_BG,
  DEFAULT_COLOR_INDICATOR_HI_BG,
  DEFAULT_COLOR_INDICATOR_LO_BG,
  DEFAULT_COLOR_MASK]
Private $aForegroundDefaults As Integer[] =
  [DEFAULT_COLOR_NAME_FG,
  DEFAULT_COLOR_HEADER_FG,
  DEFAULT_COLOR_SCORE_FG,
  DEFAULT_COLOR_SCORE_INACTIVE_FG,
  DEFAULT_COLOR_SUM_FG,
  DEFAULT_COLOR_INDICATOR_HI_FG,
  DEFAULT_COLOR_INDICATOR_LO_FG,
  DEFAULT_COLOR_MASK]
Private $aFontDefaults As String[] =
  [DEFAULT_FONT_NAME,
  DEFAULT_FONT_HEADER,
  DEFAULT_FONT_SCORE,
  DEFAULT_FONT_SCORE_INACTIVE,
  DEFAULT_FONT_SUM,
  DEFAULT_FONT_INDICATOR_HI,
  DEFAULT_FONT_INDICATOR_LO,
  DEFAULT_FONT_MASK]
Private $aBackground As New Integer[$aBackgroundDefaults.Length]
Private $aForeground As New Integer[$aForegroundDefaults.Length]
Private $aFont As New String[$aFontDefaults.Length]

Public Function GetBackground(Index As Integer) As Integer

  Return $aBackground[Index]

End

Public Sub SetBackground(Index As Integer, Color As Integer)

  $aBackground[Index] = Color

End

Public Function GetForeground(Index As Integer) As Integer

  Return $aForeground[Index]

End

Public Sub SetForeground(Index As Integer, Color As Integer)

  $aForeground[Index] = Color

End

Public Function GetFont(Index As Integer) As Font

  Return Font[$aFont[Index]]

End

Public Sub SetFont(Index As Integer, hFont As Font)

  $aFont[Index] = hFont.ToString()

End

Public Sub Load()

  Dim i As Integer

  For i = 0 To $aBackground.Max
    $aBackground[i] = Settings[KEY_BACKGROUND & i, $aBackgroundDefaults[i]]
  Next

  For i = 0 To $aForeground.Max
    $aForeground[i] = Settings[KEY_FOREGROUND & i, $aForegroundDefaults[i]]
  Next

  For i = 0 To $aFont.Max
    $aFont[i] = Settings[KEY_FONT & i, $aFontDefaults[i]]
  Next

End

Public Sub Save()

  Dim i As Integer

  'Settings.Reload()

  For i = 0 To $aBackground.Max
    Settings[KEY_BACKGROUND & i] = $aBackground[i]
  Next

  For i = 0 To $aForeground.Max
    Settings[KEY_FOREGROUND & i] = $aForeground[i]
  Next

  For i = 0 To $aFont.Max
    Settings[KEY_FONT & i] = $aFont[i]
  Next

  ' Settings.Save()

End

Private Function Players_Read() As Integer

  Return Settings[KEY_GAME_PLAYERS, 2]

End

Private Sub Players_Write(Value As Integer)

  Settings[KEY_GAME_PLAYERS] = Value

End

Private Function ReverseMouseScroll_Read() As Boolean

  Return Settings[KEY_REVERSE_MOUSE_SCROLL, False]

End

Private Sub ReverseMouseScroll_Write(Value As Boolean)

  CDicePanel.ReverseMouseScroll = Value
  Settings[KEY_REVERSE_MOUSE_SCROLL] = Value

End

Private Function GameId_Read() As String

  Return Settings[KEY_GAME_ID, "default"]

End

Private Sub GameId_Write(Value As String)

  Settings[KEY_GAME_ID] = Value

End

Private Function ShowIndicators_Read() As Boolean

  Return Settings[KEY_SCORECARD_SHOW_INDICATORS, True]

End

Private Sub ShowIndicators_Write(Value As Boolean)

  Settings[KEY_SCORECARD_SHOW_INDICATORS] = Value

End

Private Function ShowMaxCol_Read() As Boolean

  Return Settings[KEY_SCORECARD_SHOW_MAXCOL, True]

End

Private Sub ShowMaxCol_Write(Value As Boolean)

  Settings[KEY_SCORECARD_SHOW_MAXCOL] = Value

End

Private Function ShowTopCol_Read() As Boolean

  Return Settings[KEY_SCORECARD_SHOW_TOPCOL, True]

End

Private Sub ShowTopCol_Write(Value As Boolean)

  Settings[KEY_SCORECARD_SHOW_TOPCOL] = Value

End

Private Function PlayerNames_Read() As String[]

  Return LoadStringArray(KEY_PLAYER_NAMES)

End

Private Sub PlayerNames_Write(Value As String[])

  SaveStringArray(KEY_PLAYER_NAMES, Value)

End

Private Function PlayerSelection_Read() As String[]

  Return LoadStringArray(KEY_PLAYER_SELECTION)

End

Private Sub PlayerSelection_Write(Value As String[])

  SaveStringArray(KEY_PLAYER_SELECTION, Value)

End

Private Function LoadStringArray(sKey As String) As String[]

  Dim sNames As String = Settings[sKey]

  If sNames Then
    Return Split(sNames, "|", "", True, False)
  Else
    Return New String[]
  Endif

End

Private Sub SaveStringArray(sKey As String, Value As String[])

  Dim sName As String
  Dim sNames As String

  For Each sName In Value
    sNames = sNames & "|" & sName
  Next

  Settings[sKey] = String.Right(sNames, -1)

End

Private Function Variant_Read() As Integer

  Return Settings[KEY_GAME_VARIANT, 0]

End

Private Sub Variant_Write(Value As Integer)

  Settings[KEY_GAME_VARIANT] = Value

End

Private Function ShowSymbols_Read() As Boolean

  Return Settings[KEY_SCORECARD_SHOW_SYMBOLS, False]

End

Private Sub ShowSymbols_Write(Value As Boolean)

  Settings[KEY_SCORECARD_SHOW_SYMBOLS] = Value

End

Private Function FullScreen_Read() As Boolean

  Return Settings[KEY_WINDOW_FULL_SCREEN, False]

End

Private Sub FullScreen_Write(Value As Boolean)

  Settings[KEY_WINDOW_FULL_SCREEN] = Value

End

Private Function Opacity_Read() As Integer

  Return Settings[KEY_SCORECARD_OPACITY, DEFAULT_OPACITY]

End

Private Sub Opacity_Write(Value As Integer)

  Settings[KEY_SCORECARD_OPACITY] = Value

End

Private Function BackgroundType_Read() As Boolean

  Return Settings[KEY_WINDOW_BACKGROUND_TYPE, DEFAULT_WINDOW_BACKGROUND_TYPE]

End

Private Sub BackgroundType_Write(Value As Boolean)

  Settings[KEY_WINDOW_BACKGROUND_TYPE] = Value

End

Private Function Background_Read() As Integer

  Return Settings[KEY_WINDOW_BACKGROUND, DEFAULT_WINDOW_BACKGROUND]

End

Private Sub Background_Write(Value As Integer)

  Settings[KEY_WINDOW_BACKGROUND] = Value

End
