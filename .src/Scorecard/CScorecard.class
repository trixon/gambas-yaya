' Gambas class file

Property Read Panel As Panel

Private $hLeftPanel As Panel
Private $hRightPanel As Panel
Private $hPanel As Panel
Private $hGrid As CScoreGrid
Private $hGameDef As CGameDef
Private $bRegisterable As Boolean
Private $iNumOfRolls As Integer
Private $iActivePlayer As Integer
Private $hCurrentPlayer As CCircularInt

Public Sub _new(hContainer As Container)

  $hPanel = New Panel(hContainer) As "Panel"

  With $hPanel
    .Arrangement = Arrange.Horizontal
    .Expand = True
  End With

End

Private Function Panel_Read() As Panel

  Return $hPanel

End

Public Sub NewGame()

  $bRegisterable = False
  $iActivePlayer = 0
  $iNumOfRolls = 0
  '        mUndoAction.setEnabled(False);
  $hCurrentPlayer = New CCircularInt(0, MSettings.Players - 1)
  '
  '        For (PlayerColumn playerColumn: mPlayers){
  '            playerColumn.newGame();
  '        }
  '
  '        mPlayers.get(mActivePlayer).setEnabled(True);
  $hGameDef = MGameLoader.GameDefs[MSettings.GameId]

  GridInit()
  Settings()

End

Public Sub Settings()

  $hGrid.ShowMaxCol(MSettings.ShowMaxCol)
  $hGrid.ShowTopCol(MSettings.ShowTopCol)
  $hGrid.RecalcWidth()
  $hGrid.ShowTextAsSymbols(MSettings.ShowSymbols)

End

Private Sub GridInit()

  Dim iMaxCol As Integer = MSettings.Players + 2
  Dim iMaxRow As Integer = $hGameDef.Rows.Count - 1

  Try $hLeftPanel.Delete
  Try $hGrid.Delete
  Try $hRightPanel.Delete

  $hLeftPanel = New Panel($hPanel)
  $hGrid = New CScoreGrid($hPanel, $hGameDef) As "Grid"
  $hRightPanel = New Panel($hPanel)

  $hLeftPanel.Expand = True
  $hRightPanel.Expand = True

End

Public Sub Grid_Click()

  Debug $hGrid.Row, $hGrid.Column

End

Public Sub Grid_MouseMove()

  Dim iRow As Integer = $hGrid.RowAt(Mouse.Y)

  If iRow > 0 And If iRow < $hGameDef.Rows.Count Then
    $hGrid.HoverRow(iRow)

  Endif

End

Public Sub ParseDice(aValues As Integer[])

  Dim iValue As Integer
  Dim hGameRow As CGameRow

  $bRegisterable = True
  Inc $iNumOfRolls
  ' mPlayers.get(mActivePlayer).incNumOfRolls();
  ' mPlayers.get(mActivePlayer).parse(values);
  '
  ' mPlayers.get(mActivePlayer).setVisibleIndicators(mOptions.isShowingIndicators());

  For Each iValue In aValues
    Print iValue,
  Next
  Print

  For Each hGameRow In $hGameDef.Rows
    If hGameRow.Formula Then
      MFormulaParser.ParseFormula(aValues, hGameRow)
    Endif
  Next

End
