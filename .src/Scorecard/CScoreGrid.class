' Gambas class file

Inherits GridView
Property MaxCol As Boolean
Property TopCol As Boolean

Private Const ALPHA As Integer = &H1A000000
'Private Const ALPHA As Integer = &H44000000
Private Const ROW_HEIGHT_MARGIN As Integer = 6
Private Const COL_WIDTH_MARGIN As Integer = 32
Private Const COL_WIDTH_TEXT As Integer = 128
Private Const COL_WIDTH_PLAYERS As Integer = 96

Private $aTempValues As New Integer[999]

Private $bIndicators As Boolean
Private $bMaxCol As Boolean
Private $bTopCol As Boolean

Private $hCurrentPlayer As CPlayer
Private $hCurrentPlayerIndex As New CCircularInt(0, 0)
Private $hGameDef As CGameDef

Public Sub _new(hGameDef As CGameDef)

  Dim iMaxCol As Integer = MSettings.Players + 2
  Dim iMaxRow As Integer = hGameDef.Rows.Count - 1
  Dim iCol As Integer
  Dim iRow As Integer

  $hGameDef = hGameDef

  With Me
    .Columns.Count = iMaxCol + 1
    .Rows.Count = iMaxRow + 1
    .Columns.Width = COL_WIDTH_PLAYERS
    .Border = Border.None
    .Background = MSettings.GetBackground(MSettings.Score)
    .Background = &DD000000
    .Foreground = MSettings.GetForeground(MSettings.Score)
    .AutoResize = False
    .ScrollBar = Scroll.None
  End With

  Me.Columns[0].Width = COL_WIDTH_TEXT

End

Public Sub NewGame()

  ResetLayout()
  InitHeaderRow()

End

Private Sub ResetLayoutByCell(Row As Integer, Column As Integer)

  Dim hGameRow As CGameRow
  Dim hCell As _GridView_Cell

  If Row > $hGameDef.Rows.Length - 1 Then
    hGameRow = New CGameRow
  Else
    hGameRow = $hGameDef.Rows[Row]
  Endif

  hCell = Me[Row, Column]
  hCell.Padding = 8
  hCell.Alignment = Align.Right
  hCell.Font = MSettings.GetFont(MSettings.Score)

  If Column = $hCurrentPlayerIndex.Value + 3 Then
    hCell.Background = MSettings.GetBackground(MSettings.Score) Or ALPHA
  Else
    hCell.Background = MSettings.GetBackground(MSettings.ScoreInactive) Or ALPHA
  Endif

  If Column = 0 Then
    hCell.Background = MSettings.GetBackground(MSettings.Header) Or ALPHA
    hCell.Foreground = MSettings.GetForeground(MSettings.Header)
    hCell.Font = MSettings.GetFont(MSettings.Header)
    hCell.Alignment = Align.Left
  Else If Column = 1 Then 'Max column
    If Row = 0 Then
      hCell.Text = ("Max")
    Else
      hCell.Text = hGameRow.Max
    Endif
  Else If Column = 2 Then 'Top column
    If Row = 0 Then
      hCell.Text = ("Top")
    Else
      hCell.Text = hGameRow.Lim
    Endif
  Else 'Player columns
    If Row = 0 Then
      hCell.Text = MSettings.PlayerSelection[Column - 3]
    Endif
    If hGameRow.IsCounter Then
      hCell.Text = "0"
    Endif
    If Not IsNull($hCurrentPlayer) Then
      If hGameRow.IsPlayable And Not $hCurrentPlayer.Playable[Row] And $hCurrentPlayer.Values[Row] > 0 Then
        hCell.Text = $hCurrentPlayer.Values[Row]
      Else
        hCell.Text = ""
      Endif

    Endif
  Endif

  If Row = 0 Then
    hCell.Alignment = Align.Center
  Endif

  If hGameRow.IsSum Or hGameRow.IsCounter Then
    hCell.Background = MSettings.GetBackground(MSettings.Sum) Or ALPHA
    hCell.Foreground = MSettings.GetForeground(MSettings.Sum)
    hCell.Font = MSettings.GetFont(MSettings.Sum)
  Endif

End

Private Sub InitHeaderRow()
  'TODO: Don't asume header row = 0

  Dim iMaxCol As Integer = MSettings.Players + 2
  Dim iCol As Integer
  Dim hCell As _GridView_Cell

  For iCol = 0 To iMaxCol
    hCell = Me[0, iCol]

    hCell.Background = MSettings.GetBackground(MSettings.Name)
    hCell.Foreground = MSettings.GetForeground(MSettings.Name)
    hCell.Font = MSettings.GetFont(MSettings.Name)

    If iCol = 0 Then
      hCell.Text = MGameLoader.TextById($hGameDef.Id)
      hCell.Font.Bold = False
    Endif

  Next

End

Public Sub SetCurrentPlayer(Player As CPlayer)

  $hCurrentPlayer = Player

End

Public Sub SetTempData(PlayerIndex As CCircularInt, CurrentPlayer As CPlayer, Values As Integer[])

  $hCurrentPlayer = CurrentPlayer
  $hCurrentPlayerIndex = PlayerIndex
  $aTempValues = Values

End

Public Sub ShowTextAsSymbols(Value As Boolean)

  Dim iMaxRow As Integer = $hGameDef.Rows.Count - 1
  Dim iRow As Integer
  Dim hGameRow As CGameRow
  Dim hCell As _GridView_Cell
  Dim hFont As Font

  For iRow = 1 To iMaxRow
    hCell = Me[iRow, 0]

    If iRow > $hGameDef.Rows.Length - 1 Then
      hGameRow = New CGameRow
    Else
      hGameRow = $hGameDef.Rows[iRow]
    Endif

    If hGameRow.IsBonus Or hGameRow.IsSum Then
      hFont = MSettings.GetFont(MSettings.Sum)
    Else
      hFont = MSettings.GetFont(MSettings.Header)
    Endif

    If Value Then
      hCell.Text = hGameRow.Symbol
    Else
      hCell.Text = hGameRow.Text
    Endif
  Next

End

Public Sub RecalcWidth()

  Dim iWidth As Integer
  Dim iMaxCol As Integer = MSettings.Players + 2
  Dim iMaxRow As Integer = $hGameDef.Rows.Count - 1
  Dim iCol As Integer
  Dim iRow As Integer
  Dim hFont As Font
  Dim iColumnWidth As Integer
  Dim sText As String
  Dim hGameRow As CGameRow

  For iCol = 0 To iMaxCol
    If iCol = 0 Then
      'First column, game name and headers
      iColumnWidth = 0
      For iRow = 0 To iMaxRow
        hFont = Me[iRow, iCol].Font
        sText = Me[iRow, iCol].Text
        iColumnWidth = Max(iColumnWidth, hFont.TextWidth(sText))
      Next
    Else If iCol = 1
      'Second column, max values.
      If $bMaxCol Then
        sText = "8888"
        'iColumnWidth = hFont.TextWidth(sText)
        iColumnWidth = 0
        For iRow = 0 To iMaxRow
          hFont = Me[iRow, iCol].Font
          iColumnWidth = Max(iColumnWidth, hFont.TextWidth(sText))
        Next
      Else
        iColumnWidth = - COL_WIDTH_MARGIN
      Endif
    Else If iCol = 2
      'Third column, top values.
      If $bTopCol Then
        sText = "8888"
        iColumnWidth = 0
        For iRow = 0 To iMaxRow
          hFont = Me[iRow, iCol].Font
          iColumnWidth = Max(iColumnWidth, hFont.TextWidth(sText))
        Next
      Else
        iColumnWidth = - COL_WIDTH_MARGIN
      Endif
    Else
      'Remaining columns, player names, scores, and sums.
      iColumnWidth = 0
      For iRow = 0 To iMaxRow
        hFont = Me[iRow, iCol].Font

        If iRow = 0 Then
          sText = "WWWWWWW"
        Else
          sText = "8888"
        Endif

        iColumnWidth = Max(iColumnWidth, hFont.TextWidth(sText))
      Next
    Endif
    Me.Columns[iCol].Width = iColumnWidth + COL_WIDTH_MARGIN
  Next

  iWidth = Me.Columns[0].Width + Me.Columns[1].Width + Me.Columns[2].Width + MSettings.Players * (iColumnWidth + COL_WIDTH_MARGIN)
  Me.Width = iWidth

End

Public Sub Register()

  $aTempValues = New Integer[999]

End

Public Sub ResetLayout()

  Dim iMaxCol As Integer = MSettings.Players + 2
  Dim iCol As Integer

  For iCol = 0 To iMaxCol
    ResetLayoutByColumn(iCol)
  Next

End

Public Sub ResetLayoutByColumn(Column As Integer)

  Dim iMaxRow As Integer = $hGameDef.Rows.Count - 1
  Dim iRow As Integer

  For iRow = 0 To iMaxRow
    ResetLayoutByCell(iRow, Column)
  Next

  '   Try Me.Indicators = Me.Indicators
  InitHeaderRow()

End

Public Sub ApplyLayout()

  Dim iMaxRow As Integer = $hGameDef.Rows.Count - 1
  Dim iRow As Integer
  Dim hGameRow As CGameRow
  Dim iFontHeight As Integer

  ResetLayout()
  InitHeaderRow()

  For iRow = 0 To iMaxRow
    If iRow > $hGameDef.Rows.Length - 1 Then
      hGameRow = New CGameRow
    Else
      hGameRow = $hGameDef.Rows[iRow]
    Endif

    If iRow = 0 Then
      iFontHeight = MSettings.GetFont(MSettings.Name).Height
    Else If hGameRow.IsSum Or hGameRow.IsCounter
      iFontHeight = MSettings.GetFont(MSettings.Sum).Height
    Else If hGameRow.IsPlayable
      iFontHeight = MSettings.GetFont(MSettings.Score).Height
    Endif
    Me.Rows[iRow].Height = iFontHeight + ROW_HEIGHT_MARGIN
  Next

End

Public Sub HoverRow(Row As Integer, Column As Integer, Playable As Boolean)

  Dim hGameRow As CGameRow
  Dim iValue As Integer

  ResetLayoutByColumn(0)
  ' ResetLayoutByColumn(Column)

  hGameRow = $hGameDef.Rows[Row]
  iValue = $aTempValues[Row]

  If hGameRow.IsPlayable And Playable Then
    Me[Row, 0].Font.Underline = Not MSettings.GetFont(MSettings.Header).Underline
    '  Me[Row, Column].Background = MSettings.GetBackground(MSettings.ScoreInactive) Or ALPHA

    Debug iValue, hGameRow.Lim
    If iValue > 0 And MSettings.ShowIndicators Then
      If iValue >= hGameRow.Lim Then
        Me[Row, Column].Background = MSettings.GetBackground(MSettings.IndicatorHi) ' And iHover Or ALPHA
      Else
        Me[Row, Column].Background = MSettings.GetBackground(MSettings.IndicatorLo) ' And iHover Or ALPHA
      Endif
    Else
    Endif
  Endif

  '   Try Me.Indicators = Me.Indicators
  '   Try ShowIndicators(MSettings.ShowIndicators)

End

Private Function MaxCol_Read() As Boolean

  Return $bMaxCol

End

Private Sub MaxCol_Write(Value As Boolean)

  $bMaxCol = Value

End

Private Function TopCol_Read() As Boolean

  Return $bTopCol

End

Private Sub TopCol_Write(Value As Boolean)

  $bTopCol = Value

End

Public Sub UpdateRolls(iPlayer As Integer, sRolls As String)

  Dim hGameRow As CGameRow
  Dim hCell As _GridView_Cell
  Dim iMaxRow As Integer = $hGameDef.Rows.Count - 1
  Dim iRow As Integer

  For iRow = 0 To iMaxRow
    If iRow > $hGameDef.Rows.Length - 1 Then
      hGameRow = New CGameRow
    Else
      hGameRow = $hGameDef.Rows[iRow]
    Endif
    If hGameRow.IsCounter Then
      Me[iRow, iPlayer + 3].Text = sRolls
    Endif
  Next

End

' Private Function TempValues_Read() As Integer[]
'
'   Return $aTempValues
'
' End
'
' Private Sub TempValues_Write(Value As Integer[])
'
'   $aTempValues = Value
'
' End
'
' Private Function TempPlayer_Read() As CPlayer
'
'   Return $hCurrentPlayer
'
' End
'
' Private Sub TempPlayer_Write(Value As CPlayer)
'
'   $hCurrentPlayer = Value
'
' End
'
' Private Function TempPlayerIndex_Read() As CCircularInt
'
'   Return $hCurrentPlayerIndex
'
' End
'
' Private Sub TempPlayerIndex_Write(Value As CCircularInt)
'
'   $hCurrentPlayerIndex = Value
'
' End

Private Function Indicators_ReadXXX() As Boolean

  Return $bIndicators

End

Public Sub ShowIndicators(Show As Boolean)

  Dim iRow As Integer
  Dim iBackground As Integer
  Dim iForeground As Integer
  Dim iValue As Integer
  Dim hFont As Font
  Dim sText As String
  Dim hGameRow As CGameRow
  Dim hCell As _GridView_Cell

  ResetLayoutByColumn($hCurrentPlayerIndex.Value + 3)

  If Not Show Then Return

  For iRow = 0 To $hGameDef.Rows.Max
    hGameRow = $hGameDef.Rows[iRow]
    hCell = Me[iRow, $hCurrentPlayerIndex.Value + 3]
    iValue = $aTempValues[iRow]

    If hGameRow.IsPlayable And iValue > 0 And $hCurrentPlayer.Playable[iRow] Then
      If iValue >= hGameRow.Lim Then
        iBackground = MSettings.GetBackground(MSettings.IndicatorHi)
        iForeground = MSettings.GetForeground(MSettings.IndicatorHi)
        hFont = MSettings.GetFont(MSettings.IndicatorHi)
      Else
        iBackground = MSettings.GetBackground(MSettings.IndicatorLo)
        iForeground = MSettings.GetForeground(MSettings.IndicatorLo)
        hFont = MSettings.GetFont(MSettings.IndicatorLo)
      Endif
    Endif

    If hGameRow.IsPlayable And iValue > 0 And $hCurrentPlayer.Playable[iRow] Then
      hCell.Background = iBackground Or ALPHA
      hCell.Foreground = iForeground Or ALPHA
      hCell.Font = hFont
      hCell.Text = iValue
      hCell.Alignment = Align.Left
    Endif
  Next

End

Private Sub Indicators_WriteXXX(Value As Boolean)

  Dim iRow As Integer
  Dim iBackground As Integer
  Dim iForeground As Integer
  Dim iValue As Integer
  Dim hFont As Font
  Dim sText As String
  Dim hGameRow As CGameRow
  Dim hCell As _GridView_Cell

  $bIndicators = Value

  For iRow = 0 To $hGameDef.Rows.Max
    hGameRow = $hGameDef.Rows[iRow]
    hCell = Me[iRow, $hCurrentPlayerIndex.Value + 3]
    iValue = $aTempValues[iRow]
    ' iBackground = MSettings.GetBackground(MSettings.Score)
    ' iForeground = MSettings.GetForeground(MSettings.Score)
    ' hFont = MSettings.GetFont(MSettings.Score)

    If $bIndicators Then
      If hGameRow.IsPlayable And iValue > 0 And $hCurrentPlayer.Playable[iRow] Then
        If iValue >= hGameRow.Lim Then
          iBackground = MSettings.GetBackground(MSettings.IndicatorHi)
          iForeground = MSettings.GetForeground(MSettings.IndicatorHi)
          hFont = MSettings.GetFont(MSettings.IndicatorHi)
        Else
          iBackground = MSettings.GetBackground(MSettings.IndicatorLo)
          iForeground = MSettings.GetForeground(MSettings.IndicatorLo)
          hFont = MSettings.GetFont(MSettings.IndicatorLo)
        Endif
      Endif
    Else
      iBackground = MSettings.GetBackground(MSettings.Score)
      iForeground = MSettings.GetForeground(MSettings.Score)
      hFont = MSettings.GetFont(MSettings.Score)
    Endif

    If hGameRow.IsPlayable And iValue > 0 And $hCurrentPlayer.Playable[iRow] Then
      hCell.Background = iBackground Or ALPHA
      hCell.Foreground = iForeground Or ALPHA
      hCell.Font = hFont
      hCell.Text = iValue
      hCell.Alignment = Align.Left
    Endif
  Next

End

' Private Function ActivePlayer_Read() As Integer
'
'   Return $iActivePlayer
'
' End
'
' Private Sub ActivePlayer_Write(Value As Integer)
'
'   $iActivePlayer = Value + 3
'
' End
